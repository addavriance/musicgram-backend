def format_time(ms: int) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤ MM:SS

    Args:
        ms: –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ MM:SS
    """
    if ms < 0:
        ms = 0

    minutes = ms // 60000
    seconds = (ms % 60000) // 1000
    return f"{minutes}:{seconds:02d}"


def create_progress_bar(current_ms: int, total_ms: int, length: int = 15) -> str:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ —Ç—Ä–µ–∫–∞

    Args:
        current_ms: –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        total_ms: –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        length: –î–ª–∏–Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –≤ —Å–∏–º–≤–æ–ª–∞—Ö

    Returns:
        –°—Ç—Ä–æ–∫–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    """
    if total_ms <= 0:
        return "-:- " + "‚îÄ" * length + " -:-"

    current_ms = max(0, min(current_ms, total_ms))

    progress = current_ms / total_ms
    filled_length = int(length * progress)

    filled = "‚îÅ" * filled_length
    dot = "‚óè" if filled_length < length else ""
    empty = "‚îÄ" * max(0, length - filled_length - (1 if dot else 0))

    current_time = format_time(current_ms)
    remaining_time = format_time(total_ms - current_ms)

    return f"{current_time} {filled}{dot}{empty} -{remaining_time}"


def create_progress_text(track_data: dict) -> str:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–µ–∫–µ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º

    Args:
        track_data: –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–∫–∞ —Å–æ –≤—Å–µ–º–∏ –ø–æ–ª—è–º–∏

    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª
    """

    if not track_data or not track_data.get('is_playing'):
        return "‚è∏Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç"

    from app.bot.utils.utils import esc
    track_name = esc(track_data.get('name', 'Unknown Track'))
    artist = esc(track_data.get('artist', 'Unknown Artist'))

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤—Ä–µ–º–µ–Ω–∏
    progress_bar = ""
    if track_data.get('duration_ms', 0) > 0:
        progress_bar = create_progress_bar(
            track_data.get('progress_ms', 0),
            track_data['duration_ms']
        )
        progress_bar = f"\n\n`{progress_bar}`"

    return f"üéµ *{track_name}*\nüë§ {artist}{progress_bar}"


def create_simple_progress_bar(current_ms: int, total_ms: int) -> str:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ (–¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)

    Args:
        current_ms: –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        total_ms: –û–±—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    Returns:
        –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    """

    if total_ms <= 0:
        return "‚è∏Ô∏è"

    progress = max(0, min(current_ms / total_ms, 1))
    length = 15  # –ö–æ—Ä–æ—Ç–∫–∏–π –±–∞—Ä
    filled_length = int(length * progress)

    filled = "‚îÅ" * filled_length
    dot = "‚óè" if filled_length < length else ""
    empty = "‚îÄ" * max(0, length - filled_length - (1 if dot else 0))

    return f"{filled}{dot}{empty}"


def get_track_emoji(track_data: dict) -> str:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç—Ä–µ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –¥–∞–Ω–Ω—ã—Ö

    Args:
        track_data: –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–∫–∞

    Returns:
        –ü–æ–¥—Ö–æ–¥—è—â–∏–π —ç–º–æ–¥–∑–∏
    """

    if not track_data or not track_data.get('is_playing'):
        return "‚è∏Ô∏è"

    # TODO: increase variety of emojis depending on track genre, etc.
    return "üéµ"


def create_channel_title(track_data: dict) -> str:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–∫–∞

    Args:
        track_data: –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–∫–∞

    Returns:
        –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞
    """
    if not track_data or not track_data.get('is_playing'):
        return "‚è∏ –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç"

    track_name = track_data.get('name', 'Unknown Track')
    artist = track_data.get('artist', 'Unknown Artist')

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ (Telegram –ª–∏–º–∏—Ç ~255 —Å–∏–º–≤–æ–ª–æ–≤)
    max_length = 100
    title = f"üéµ {track_name} - {artist}"

    if len(title) > max_length:
        # –û–±—Ä–µ–∑–∞–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤–∞–∂–Ω–æ–π —á–∞—Å—Ç–∏
        available_length = max_length - 7  # "üéµ  - " + "..."
        track_part = min(len(track_name), available_length // 2)
        artist_part = available_length - track_part

        title = f"üéµ {track_name[:track_part]} - {artist[:artist_part]}..."

    return title
