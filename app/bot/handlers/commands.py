import logging
from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from sqlalchemy import select

from app.bot.utils import esc
from app.config import settings
from app.database.connection import get_session
from app.database.models import User, Channel
from app.services.spotify import SpotifyService
from app.bot.utils.progress import create_progress_text

logger = logging.getLogger(__name__)

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"""
    user_id = message.from_user.id
    auth_url = SpotifyService().get_auth_url(user_id)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üéß –ü–æ–¥–∫–ª—é—á–∏—Ç—å Spotify",
                url=auth_url  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ç–≤–æ–π –¥–æ–º–µ–Ω
            )
        ],
        [
            InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ])

    text = """
üéµ *Spotify Status Bot*

–û—Ç–æ–±—Ä–∞–∂–∞–π –º—É–∑—ã–∫—É –≤ –ø—Ä–æ—Ñ–∏–ª–µ Telegram —á–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª.

*–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*
‚Ä¢ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Ç—Ä–µ–∫–∞
‚Ä¢ –û–±–ª–æ–∂–∫–∞ –∫–∞–∫ –∞–≤–∞—Ç–∞—Ä –∫–∞–Ω–∞–ª–∞

üëá *–ù–∞—á–Ω–∏ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Spotify*
    """

    await message.answer(text, reply_markup=keyboard)


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /help - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"""
    text = """
üìö *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è*

*1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Spotify*
‚Ä¢ –ù–∞–∂–º–∏ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å Spotify"
‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è –≤ –∞–∫–∫–∞—É–Ω—Ç–µ

*2. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞*
‚Ä¢ –°–æ–∑–¥–∞–π –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –≤ Telegram
‚Ä¢ –î–æ–±–∞–≤—å –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∞ —Å –ø—Ä–∞–≤–∞–º–∏:
  - –ò–∑–º–µ–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–∞–Ω–∞–ª–∞
  - –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å: /channel @—Ç–≤–æ–π_–∫–∞–Ω–∞–ª

*3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å*
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ > –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å > –ö–∞–Ω–∞–ª

*–ö–æ–º–∞–Ω–¥—ã:*
/start - –ø–æ–¥–∫–ª—é—á–∏—Ç—å Spotify
/status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
/current - —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
/channel @username - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª
/disconnect - –æ—Ç–∫–ª—é—á–∏—Ç—å
    """

    await message.answer(text)


@router.message(Command("status"))
async def cmd_status(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /status - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    user_id = message.from_user.id

    async for db in get_session():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = await db.execute(
                select(User).where(User.telegram_id == user_id)
            )

            user = result.scalar_one_or_none()
            auth_url = SpotifyService().get_auth_url(user_id)

            if not user or not user.is_spotify_connected:
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="üéß –ü–æ–¥–∫–ª—é—á–∏—Ç—å Spotify",
                            url=auth_url
                        )
                    ]
                ])

                await message.answer(
                    "‚ùå *Spotify –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω*\n\n–î–ª—è —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç Spotify.",
                    reply_markup=keyboard
                )
                return

            # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            channel_result = await db.execute(
                select(Channel).where(Channel.user_id == user.id)
            )
            channel = channel_result.scalar_one_or_none()

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text="üéµ –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫", callback_data="current_track"),
                    InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
                ]
            ])

            channel_info = f"üéØ –ö–∞–Ω–∞–ª: @{channel.channel_username}" if channel else "‚ö†Ô∏è –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /channel"

            text = f"""
‚úÖ *Spotify –ø–æ–¥–∫–ª—é—á–µ–Ω*

üìÖ –ü–æ–¥–∫–ª—é—á–µ–Ω: {user.created_at.strftime('%d.%m.%Y')}
{esc(channel_info)}
üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫
            """

            await message.answer(text, reply_markup=keyboard)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /status –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@router.message(Command("current"))
async def cmd_current(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /current - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫"""
    user_id = message.from_user.id

    async for db in get_session():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = await db.execute(
                select(User).where(User.telegram_id == user_id)
            )
            user = result.scalar_one_or_none()

            if not user or not user.is_spotify_connected:
                await message.answer("‚ùå Spotify –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /start")
                return

            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ —á–µ—Ä–µ–∑ API
            spotify_service = SpotifyService()

            try:
                track_data = await spotify_service.get_current_track(user.spotify_access_token)

                if not track_data:
                    await message.answer("‚è∏Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç")
                    return

                parsed_track = spotify_service.parse_track_data(track_data)

                if parsed_track and parsed_track['is_playing']:
                    text = create_progress_text(parsed_track)

                    await message.answer(text)
                else:
                    await message.answer("‚è∏Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç")

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å: /start")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /current –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@router.message(Command("disconnect"))
async def cmd_disconnect(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /disconnect - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ Spotify"""
    user_id = message.from_user.id

    async for db in get_session():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = await db.execute(
                select(User).where(User.telegram_id == user_id)
            )
            user = result.scalar_one_or_none()

            if not user:
                await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return

            # –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω—ã
            user.spotify_access_token = None
            user.spotify_refresh_token = None
            user.token_expires_at = None

            await db.commit()

            await message.answer("üîå *Spotify –æ—Ç–∫–ª—é—á–µ–Ω*\n\n/start - –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∑–∞–Ω–æ–≤–æ")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Spotify –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@router.message(Command("channel"))
async def cmd_channel(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /channel - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥—ã
    args = message.text.split()[1:] if len(message.text.split()) > 1 else []

    if not args:
        await message.answer("""
‚ùå *–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã*

–ò—Å–ø–æ–ª—å–∑—É–π: `/channel @—Ç–≤–æ–π_–∫–∞–Ω–∞–ª`
–ò–ª–∏: `/channel https://t.me/—Ç–≤–æ–π_–∫–∞–Ω–∞–ª`

–ü–µ—Ä–µ–¥ —ç—Ç–∏–º:
1. –°–æ–∑–¥–∞–π –∫–∞–Ω–∞–ª –≤ Telegram
2. –î–æ–±–∞–≤—å @{} –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
3. –î–∞–π –ø—Ä–∞–≤–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
        """.format(settings.TG_BOT_USERNAME))
        return

    channel_url = args[0]

    async for db in get_session():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = await db.execute(
                select(User).where(User.telegram_id == user_id)
            )
            user = result.scalar_one_or_none()

            if not user or not user.is_spotify_connected:
                await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏ Spotify —á–µ—Ä–µ–∑ /start")
                return

            # –ò–∑–≤–ª–µ–∫–∞–µ–º username –∫–∞–Ω–∞–ª–∞
            from app.bot.utils import ChannelManager
            channel_manager = ChannelManager()
            channel_username = channel_manager.extract_channel_username(channel_url)

            if not channel_username:
                await message.answer("‚ùå *–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª*\n\n–§–æ—Ä–º–∞—Ç: /channel @—Ç–≤–æ–π_–∫–∞–Ω–∞–ª")
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
            is_admin = await channel_manager.check_bot_admin_status(channel_username)

            if not is_admin:
                await message.answer(f"""
‚ùå *–ù–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞*

–î–æ–±–∞–≤—å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª @{channel_username} –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–∞–≤–∞–º–∏:
‚Ä¢ –ò–∑–º–µ–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–∞–Ω–∞–ª–∞
‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
                """)
                return

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–Ω–∞–ª
            channel_result = await db.execute(
                select(Channel).where(Channel.user_id == user.id)
            )
            channel = channel_result.scalar_one_or_none()

            if channel:
                channel.channel_username = channel_username
            else:
                channel = Channel(
                    user_id=user.id,
                    channel_username=channel_username
                )
                db.add(channel)

            await db.commit()

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª
            await channel_manager.initialize_channel(channel_username, user_id)

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text="üéµ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="update_channel"),
                    InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="channel_settings")
                ]
            ])

            text = f"""
‚úÖ *–ö–∞–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω*

üéØ @{channel_username}
‚è±Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫

*–î–æ–±–∞–≤—å –∫–∞–Ω–∞–ª –≤ –ø—Ä–æ—Ñ–∏–ª—å*"""

            await message.answer(esc(text), reply_markup=keyboard)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞")


@router.message()
async def handle_unknown_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = """
ü§ñ *–ö–æ–º–∞–Ω–¥—ã:*

/start - –ø–æ–¥–∫–ª—é—á–∏—Ç—å Spotify
/help - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
/status - —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
/current - —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
/channel @username - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª
/disconnect - –æ—Ç–∫–ª—é—á–∏—Ç—å

‚ùì /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π
    """

    await message.answer(text)